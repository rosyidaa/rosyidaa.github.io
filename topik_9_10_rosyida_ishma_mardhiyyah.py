# -*- coding: utf-8 -*-
"""Topik 9 10 - Rosyida Ishma Mardhiyyah

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sfxLFVDh_phJKWS21oZqG6TuzurBE0VM

# Introduction to Probability and Statistics
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

import warnings
warnings.filterwarnings('ignore')

"""## Assignment

In this assignment, we will use the dataset of diabetes patients taken [from here](https://www4.stat.ncsu.edu/~boos/var.select/diabetes.html).
"""

df = pd.read_csv("https://www4.stat.ncsu.edu/~boos/var.select/diabetes.tab.txt",sep='\t')
df.head(10)

"""In this dataset, columns as the following:
* Age and sex are self-explanatory
* BMI is body mass index
* BP is average blood pressure
* S1 through S6 are different blood measurements
* Y is the qualitative measure of disease progression over one year
"""

df.info()

df["SEX"] = df["SEX"].astype("category")
df["SEX"].dtype

"""Let's study this dataset using methods of probability and statistics.

## Task 1: Compute mean values and variance for all values

### Mean
"""

df.mean()

np.mean(df)

"""###Variance"""

df.var()

np.var(df, ddof=1)

"""## Task 2: Plot boxplots for BMI, BP and Y depending on gender"""

plt.figure(figsize = (4, 9))
sns.set_style("darkgrid")
sns.set_palette("Paired")
plt.title("Boxplot for BMI depending on gender")
sns.boxplot(x="SEX", y = 'BMI', data = df)

plt.figure(figsize = (3, 7))
sns.set_style("darkgrid")
sns.set_palette("Set2")
plt.title("Boxplot for BP depending on gender")
sns.boxplot(x="SEX", y = "BP", data = df)

plt.figure(figsize = (3, 5))
sns.set_style("darkgrid")
sns.set_palette("Set3")
plt.title("Boxplot for Y depending on gender")
sns.boxplot(x="SEX", y = 'Y', data = df)

"""## Task 3: What is the the distribution of Age, Sex, BMI and Y variables?"""

pip install -U distfit

from distfit import distfit

"""###The Distribution of Age"""

sns.displot(df["AGE"], bins=30, kind="hist")

#Initiate model
dist1 = distfit(bins=25,alpha=0.02,stats='ks')

#Fit to the data
dist1.fit_transform(df["AGE"],verbose=1)

dist1.summary

"""Berdasarkan output dari dist1.summary, terdapat kolom score yang menunjukkan nilai goodness of fit, yaitu jarak antara data yang diharapkan dan data yang diberikan, dimana nilai yang lebih rendah akan lebih baik. Nilai ini menjadi acuan dalam menentukan distribusi yang sesuai dengan data.

Kesimpulan: Variabel Age berdistribusi normal

###The Distribution of Sex

Variabel Sex merupakan data kategorik sehingga kurang tepat jika dilakukan penentuan distribusi datanya.

###The Distribution of BMI
"""

sns.displot(df["BMI"], bins=30, kind="hist")

#Initiate model
dist2 = distfit(bins=25,alpha=0.02,stats='ks')

#Fit to the data
dist2.fit_transform(df["BMI"],verbose=1)

dist2.summary

"""Kesimpulan: Variabel BMI berdistribusi normal

###The Distribution of Y
"""

sns.displot(df["Y"], bins=30, kind="hist")

#Initiate model
dist3 = distfit(bins=25,alpha=0.02,stats='ks')

#Fit to the data
dist3.fit_transform(df["Y"],verbose=1)

dist3.summary

"""Kesimpulan: Variabel Y berdistribusi normal"""